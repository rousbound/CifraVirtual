#!/usr/bin/env python3.6
from GUI import*
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow
import sys
import os
import threading
from MusicManager import*

class Main:
    def __init__(self):
        self.ui = Ui_AtelieVirtual()
        self.mainWindow = QMainWindow()
        self.ui.setupUi(self.mainWindow)
        self.mainWindow.resize(791, 808)

        self.connect(self.ui)



    def connect(self,MainWindow):
        MainWindow.actionSongs.triggered.connect(lambda: self.OpenWindow(4,"Music/"))
        MainWindow.actionCompositions.triggered.connect(lambda: self.OpenWindow(4,"MyMusic/"))
        MainWindow.musicAddEntryButton.clicked.connect(lambda:music.MusicAddItem(self))
        MainWindow.musicList.itemClicked.connect(lambda: music.openItem(self,self.definer,self.ui.musicList,self.ui.musicTextDisplay))
        MainWindow.musicSaveButton.clicked.connect(lambda: self.listSave(self.ui.musicTextDisplay,"",self.ui.musicList, folder = self.definer))
        MainWindow.musicPlayButton.clicked.connect(lambda: music.playMusic(self,self.ui.musicList))
        MainWindow.musicReplayButton.clicked.connect(lambda: music.replayMusic(self.ui.musicList))
        MainWindow.musicRewindButton.clicked.connect(lambda: music.changeTimePos(-5000))
        MainWindow.musicForwardButton.clicked.connect(lambda: music.changeTimePos(5000))

    def open_file(self,path,display, folder = ""):
        try:
            file = open(folder + path + ".txt",'r')
            with file:
                text = file.read()
            display.setText(text)
        except:
            print("File not found")


    def save(self,display,path,folder=None):
        mytext = display.toPlainText()
        def overwrite(path):
            file = open(folder + path+ ".txt" ,"w")
            file.write(str(mytext))
            file.close()
        overwrite(path)

    def saveEnumerated(self,display,path,folder = None):
        mytext = display.toPlainText()
        while os.path.isfile(os.getcwd() + folder + path + ".txt") == True:
            i+= 1
            path = path + str(i)
        file = open(folder + path + ".txt","w")
        file.write(str(mytext))
        file.close()

    def listSave(self,display,path,list,folder = ""):
        self.save(display,list.currentItem().text(),folder)


    def newItem(self):
        def subAdd(path):
            file = open('MainTexts/' + path + ".txt",'a+')
            text = self.ui.diaryTextEntry.toPlainText()
            file.write("\n\n")
            file.write(str(datetime.datetime.now())[:19] + ":" + "\n")
            file.write(text)
            file.close()
            file = open('MainTexts/' + path + ".txt",'r')
            self.ui.diaryTextEntry.clear()
        subAdd(self.definer)
        self.open_file(self.definer,self.ui.diaryTextDisplay,folder = "MainTexts/")



    def newListItem(self,lineEntry,textDisplay,list):
        item = lineEntry.text()
        items = list.findItems(item,QtCore.Qt.MatchExactly)
        if len(items) == 0:
            if item != "":
                textDisplay.clear()
                lineEntry.clear()
                list.addItem(item)

    def openItem(self,path,list,display):
        text = path + list.currentItem().text()
        self.open_file(text,display)


    def loadListFiles(self,path,list):
        for el in os.listdir(path):
            if el[-4:] == ".txt":
                list.addItem(el[:-4])

    def removeSel(self,list):
        listItems=[list.item(i) for i in range(list.count())]
        for item in listItems:
           list.takeItem(list.row(item))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    main = Main()
    main.mainWindow.show()
    sys.exit(app.exec_())
